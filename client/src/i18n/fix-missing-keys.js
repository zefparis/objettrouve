#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

// Languages supported
const LANGUAGES = ['en', 'es', 'pt', 'it', 'de', 'nl', 'zh', 'ja', 'ko'];

// Missing keys to add automatically
const MISSING_KEYS = {
  'nav.profile': {
    en: 'Profile',
    es: 'Perfil',
    pt: 'Perfil',
    it: 'Profilo',
    de: 'Profil',
    nl: 'Profiel',
    zh: '‰∏™‰∫∫ËµÑÊñô',
    ja: '„Éó„É≠„Éï„Ç£„Éº„É´',
    ko: 'ÌîÑÎ°úÌïÑ'
  },
  'nav.login': {
    en: 'Login',
    es: 'Iniciar sesi√≥n',
    pt: 'Entrar',
    it: 'Accedi',
    de: 'Anmelden',
    nl: 'Inloggen',
    zh: 'ÁôªÂΩï',
    ja: '„É≠„Ç∞„Ç§„É≥',
    ko: 'Î°úÍ∑∏Ïù∏'
  },
  'nav.logout': {
    en: 'Logout',
    es: 'Cerrar sesi√≥n',
    pt: 'Sair',
    it: 'Disconnetti',
    de: 'Abmelden',
    nl: 'Uitloggen',
    zh: 'ÈÄÄÂá∫',
    ja: '„É≠„Ç∞„Ç¢„Ç¶„Éà',
    ko: 'Î°úÍ∑∏ÏïÑÏõÉ'
  },
  'nav.features': {
    en: 'Features',
    es: 'Caracter√≠sticas',
    pt: 'Recursos',
    it: 'Funzionalit√†',
    de: 'Funktionen',
    nl: 'Functies',
    zh: 'ÂäüËÉΩ',
    ja: 'Ê©üËÉΩ',
    ko: 'Í∏∞Îä•'
  },
  'auth.signUp': {
    en: 'Sign Up',
    es: 'Registrarse',
    pt: 'Cadastrar',
    it: 'Registrati',
    de: 'Registrieren',
    nl: 'Registreren',
    zh: 'Ê≥®ÂÜå',
    ja: 'ÁôªÈå≤',
    ko: 'Í∞ÄÏûÖ'
  },
  'auth.signIn': {
    en: 'Sign In',
    es: 'Iniciar sesi√≥n',
    pt: 'Entrar',
    it: 'Accedi',
    de: 'Anmelden',
    nl: 'Inloggen',
    zh: 'ÁôªÂΩï',
    ja: '„É≠„Ç∞„Ç§„É≥',
    ko: 'Î°úÍ∑∏Ïù∏'
  },
  'auth.email': {
    en: 'Email',
    es: 'Correo electr√≥nico',
    pt: 'Email',
    it: 'Email',
    de: 'E-Mail',
    nl: 'E-mail',
    zh: 'ÈÇÆÁÆ±',
    ja: '„É°„Éº„É´',
    ko: 'Ïù¥Î©îÏùº'
  },
  'auth.password': {
    en: 'Password',
    es: 'Contrase√±a',
    pt: 'Senha',
    it: 'Password',
    de: 'Passwort',
    nl: 'Wachtwoord',
    zh: 'ÂØÜÁ†Å',
    ja: '„Éë„Çπ„ÉØ„Éº„Éâ',
    ko: 'ÎπÑÎ∞ÄÎ≤àÌò∏'
  },
  'auth.firstName': {
    en: 'First Name',
    es: 'Nombre',
    pt: 'Nome',
    it: 'Nome',
    de: 'Vorname',
    nl: 'Voornaam',
    zh: 'ÂêçÂ≠ó',
    ja: 'ÂêçÂâç',
    ko: 'Ïù¥Î¶Ñ'
  },
  'auth.lastName': {
    en: 'Last Name',
    es: 'Apellido',
    pt: 'Sobrenome',
    it: 'Cognome',
    de: 'Nachname',
    nl: 'Achternaam',
    zh: 'ÂßìÊ∞è',
    ja: 'Âßì',
    ko: 'ÏÑ±'
  },
  'profile.personalInfo': {
    en: 'Personal Information',
    es: 'Informaci√≥n personal',
    pt: 'Informa√ß√µes pessoais',
    it: 'Informazioni personali',
    de: 'Pers√∂nliche Informationen',
    nl: 'Persoonlijke informatie',
    zh: '‰∏™‰∫∫‰ø°ÊÅØ',
    ja: 'ÂÄã‰∫∫ÊÉÖÂ†±',
    ko: 'Í∞úÏù∏ Ï†ïÎ≥¥'
  },
  'profile.security': {
    en: 'Security',
    es: 'Seguridad',
    pt: 'Seguran√ßa',
    it: 'Sicurezza',
    de: 'Sicherheit',
    nl: 'Beveiliging',
    zh: 'ÂÆâÂÖ®',
    ja: '„Çª„Ç≠„É•„É™„ÉÜ„Ç£',
    ko: 'Î≥¥Ïïà'
  },
  'profile.preferences': {
    en: 'Preferences',
    es: 'Preferencias',
    pt: 'Prefer√™ncias',
    it: 'Preferenze',
    de: 'Einstellungen',
    nl: 'Voorkeuren',
    zh: 'ÂÅèÂ•Ω',
    ja: 'Ë®≠ÂÆö',
    ko: 'ÌôòÍ≤ΩÏÑ§Ï†ï'
  },
  'map.loading': {
    en: 'Loading map...',
    es: 'Cargando mapa...',
    pt: 'Carregando mapa...',
    it: 'Caricamento mappa...',
    de: 'Karte wird geladen...',
    nl: 'Kaart laden...',
    zh: 'Âä†ËΩΩÂú∞Âõæ‰∏≠...',
    ja: '„Éû„ÉÉ„Éó„ÇíË™≠„ÅøËæº„Åø‰∏≠...',
    ko: 'ÏßÄÎèÑ Î°úÎî© Ï§ë...'
  },
  'map.loadError': {
    en: 'Error loading map',
    es: 'Error al cargar el mapa',
    pt: 'Erro ao carregar mapa',
    it: 'Errore nel caricamento della mappa',
    de: 'Fehler beim Laden der Karte',
    nl: 'Fout bij het laden van kaart',
    zh: 'Âú∞ÂõæÂä†ËΩΩÈîôËØØ',
    ja: '„Éû„ÉÉ„Éó„ÅÆË™≠„ÅøËæº„Åø„Ç®„É©„Éº',
    ko: 'ÏßÄÎèÑ Î°úÎî© Ïò§Î•ò'
  },
  'map.loadErrorDesc': {
    en: 'Could not load the map. Please check your internet connection.',
    es: 'No se pudo cargar el mapa. Verifique su conexi√≥n a internet.',
    pt: 'N√£o foi poss√≠vel carregar o mapa. Verifique sua conex√£o com a internet.',
    it: 'Impossibile caricare la mappa. Controlla la connessione internet.',
    de: 'Karte konnte nicht geladen werden. Bitte √ºberpr√ºfen Sie Ihre Internetverbindung.',
    nl: 'Kon kaart niet laden. Controleer uw internetverbinding.',
    zh: 'Êó†Ê≥ïÂä†ËΩΩÂú∞Âõæ„ÄÇËØ∑Ê£ÄÊü•ÊÇ®ÁöÑÁΩëÁªúËøûÊé•„ÄÇ',
    ja: '„Éû„ÉÉ„Éó„ÇíË™≠„ÅøËæº„ÇÅ„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ„Ç§„É≥„Çø„Éº„Éç„ÉÉ„ÉàÊé•Á∂ö„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
    ko: 'ÏßÄÎèÑÎ•º Î°úÎìúÌï† Ïàò ÏóÜÏäµÎãàÎã§. Ïù∏ÌÑ∞ÎÑ∑ Ïó∞Í≤∞ÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî.'
  },
  'map.myLocation': {
    en: 'My Location',
    es: 'Mi ubicaci√≥n',
    pt: 'Minha localiza√ß√£o',
    it: 'La mia posizione',
    de: 'Mein Standort',
    nl: 'Mijn locatie',
    zh: 'ÊàëÁöÑ‰ΩçÁΩÆ',
    ja: 'ÁèæÂú®Âú∞',
    ko: 'ÎÇ¥ ÏúÑÏπò'
  },
  'map.yourLocation': {
    en: 'Your Location',
    es: 'Tu ubicaci√≥n',
    pt: 'Sua localiza√ß√£o',
    it: 'La tua posizione',
    de: 'Ihr Standort',
    nl: 'Uw locatie',
    zh: 'ÊÇ®ÁöÑ‰ΩçÁΩÆ',
    ja: '„ÅÇ„Å™„Åü„ÅÆÂ†¥ÊâÄ',
    ko: 'ÎãπÏã†Ïùò ÏúÑÏπò'
  },
  'map.totalItems': {
    en: 'Total Items',
    es: 'Elementos totales',
    pt: 'Itens totais',
    it: 'Elementi totali',
    de: 'Gesamtanzahl',
    nl: 'Totale items',
    zh: 'ÊÄªÈ°πÁõÆ',
    ja: 'ÂêàË®à„Ç¢„Ç§„ÉÜ„É†',
    ko: 'Ï¥ù Ìï≠Î™©'
  },
  'map.viewOnMap': {
    en: 'View on Map',
    es: 'Ver en el mapa',
    pt: 'Ver no mapa',
    it: 'Visualizza sulla mappa',
    de: 'Auf Karte anzeigen',
    nl: 'Bekijk op kaart',
    zh: 'Âú®Âú∞Âõæ‰∏äÊü•Áúã',
    ja: '„Éû„ÉÉ„Éó„ÅßË°®Á§∫',
    ko: 'ÏßÄÎèÑÏóêÏÑú Î≥¥Í∏∞'
  },
  'map.centerOnLocation': {
    en: 'Center on Location',
    es: 'Centrar en ubicaci√≥n',
    pt: 'Centralizar na localiza√ß√£o',
    it: 'Centra sulla posizione',
    de: 'Auf Standort zentrieren',
    nl: 'Centreren op locatie',
    zh: 'Âú®‰ΩçÁΩÆ‰∏äÂ±Ö‰∏≠',
    ja: '‰ΩçÁΩÆ„Çí‰∏≠ÂøÉ„Å´',
    ko: 'ÏúÑÏπò Ï§ëÏã¨ÏúºÎ°ú'
  }
};

// Function to set nested value in object
function setNestedValue(obj, key, value) {
  const keys = key.split('.');
  const last = keys.pop();
  const target = keys.reduce((current, part) => {
    if (!current[part]) current[part] = {};
    return current[part];
  }, obj);
  target[last] = value;
}

// Function to read translation file
function readTranslationFile(lang) {
  try {
    const filePath = path.join(__dirname, 'locales', lang, 'translation.json');
    const content = fs.readFileSync(filePath, 'utf8');
    return JSON.parse(content);
  } catch (error) {
    console.error(`Error reading ${lang} file:`, error.message);
    return null;
  }
}

// Function to write translation file
function writeTranslationFile(lang, data) {
  try {
    const filePath = path.join(__dirname, 'locales', lang, 'translation.json');
    fs.writeFileSync(filePath, JSON.stringify(data, null, 2));
    return true;
  } catch (error) {
    console.error(`Error writing ${lang} file:`, error.message);
    return false;
  }
}

console.log('üîß AUTO-FIX: Adding missing translation keys...\n');

const addedKeys = {};

// Process each language
LANGUAGES.forEach(lang => {
  console.log(`üåç Processing ${lang.toUpperCase()}...`);
  
  const translations = readTranslationFile(lang);
  if (!translations) {
    console.log(`‚ùå Skipping ${lang} - file not found`);
    return;
  }
  
  addedKeys[lang] = [];
  
  // Add missing keys
  Object.keys(MISSING_KEYS).forEach(key => {
    const value = MISSING_KEYS[key][lang];
    if (value) {
      setNestedValue(translations, key, value);
      addedKeys[lang].push(key);
    }
  });
  
  // Write back to file
  if (writeTranslationFile(lang, translations)) {
    console.log(`‚úÖ ${lang.toUpperCase()}: ${addedKeys[lang].length} keys added`);
  } else {
    console.log(`‚ùå ${lang.toUpperCase()}: Failed to write file`);
  }
});

// Generate report
const report = {
  timestamp: new Date().toISOString(),
  totalKeysAdded: Object.keys(MISSING_KEYS).length,
  languagesProcessed: LANGUAGES.length,
  keysByLanguage: addedKeys,
  addedKeys: Object.keys(MISSING_KEYS)
};

// Save report
fs.writeFileSync(
  path.join(__dirname, 'missingKeysReport.json'),
  JSON.stringify(report, null, 2)
);

console.log('\nüìä SUMMARY:');
console.log(`‚úÖ Total keys added: ${Object.keys(MISSING_KEYS).length}`);
console.log(`‚úÖ Languages processed: ${LANGUAGES.length}`);
console.log(`üìÑ Report saved: missingKeysReport.json\n`);